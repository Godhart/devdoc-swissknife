[
["index.html", "Devdoc-Swissknife-Ru Вступление", " Devdoc-Swissknife-Ru Николай Гнитеев 2021-09-30 Вступление Этот проект демонстрирует подход к созданию документации на разработку с помощью R Markdown и Kroki. Данный подход позволяет создавать документацию в виде файлов PDF, презентаций, сайта документтации по шаблону gitbook и в некоторых других форматах, используя для этого текстовые файлы с синтаксисом markdown (Pandoc flavor) и дополнительными вставками кода на языке R, а так же текстовые описания разного рода диаграмм. Целью этого проекта является создание документации, максимально используя для этого текстовый формат, в т.ч. для описания графических диаграмм, но при этом без излишних переусложнений. За счёт текстового описания диаграмм, с ними проще работать в системах контроля версий, получать разницу между версиями, добавлять к ним коментарии, делать обзор изменений и т.п. Часто может оказаться и так, что создание диаграмм, а тем более их развитие быстрее делать в текстовом виде, а так же делать такие вещи как применение и/или рефакторинг цветовых схем. Поскольку зачастую тектовое описание диаграмм это больше опиисание некой модели, чем описание графических элентов,то при редактирвоании таких описаний не требуется тратить усилия на то чтобы в графическом виде взаимосвязи сохранялись, т.к. это будет происходить автоматически, покуда не изменились названия объектов модели. Уже один только R Markdown сам по себе является мощным и настраиваемым инструментом, который можно подстроить на формирование документов в том виде, в котором это вам требуется. Конечно для этого в начале придётся приложить определённые усилия, но в конечном итоге они окупятся. Чтобы на выходе были великлепные файлы PDF нужен и соответствующий класс для Latex. Пока что у меня такого нет, поэтому в данном проекте PDF файлы выглядят довольнно-таки просто. Но надеюсь, что рано или поздно, появится что показать и с этой стороны. Для визуализации диаграмм используется локальный сервер Kroki, не требующий подключения к сети Internet, что позволит не беспокоится за сохранение конфиденциальности данных. Помимо демонстрационных целей этот проект так же может быть использован как шаблон для формирования вашей собственной документации. В этом разделе данный вопрос рассмотрен подробнее. Все инструменты для создания документации запускаются из контейнеров docker, что упростит встраивание этого подхода в ваш конвейер CI/CD. Структура оргнизации документации, а так же некоторые файлы взаимствованы из R Markdown book В проекте приводится несколько примеров диаграмм для наиболее частых случаев, требуемых в разработке. По ссылкам на проекты Вы сможете найти что-то и для менее типовых задач. Для большинства примеров использован код с сайта Kroki Полезные ссылки: Список поддерживаемых визуализаторов диаграмм - https://kroki.io/#support Немного больше примеров диаграмм - https://kroki.io/examples.html R Markdown: The Definitive Guide - https://bookdown.org/yihui/rmarkdown/ от авторов R Markdown и созданное с помощю R Markdown R Markdown: Cookbook - https://bookdown.org/yihui/rmarkdown-cookbook/ Неплохая методичка по R Markdown - https://rmd4sci.njtierney.com/ R Markdown cheatsheet - https://raw.githubusercontent.com/rstudio/cheatsheets/master/rmarkdown.pdf R Markdown reference - https://rmarkdown.rstudio.com/docs/reference/index.html Keenwrite - редактор с поддержкой предварительного просмотра всех диаграмм! "],
["1-.html", "1 Простые примеры визуализации диаграмм", " 1 Простые примеры визуализации диаграмм Поскольку основной фокус этого проекта на встраивании диаграмм, описанных в текстовом виде, в файл R Markdown (т.к. остальное в большинстве случаев смогут обеспечить возможности самого R Markdown), для начала приведена пара простых примеров для иллюстрации самого принципа. "],
["1-1-.html", "1.1 Пример с описанием диаграммы непосредственно в тексте файла документации", " 1.1 Пример с описанием диаграммы непосредственно в тексте файла документации Вставка такого кода в файл документации: ```{r echo=FALSE, results=&#39;asis&#39;} to_diagram(&quot;graphviz&quot;, &quot;Hello World&quot;, &quot;digraph G {Hello-&gt;World}&quot; ) ``` добавит такую диаграмму: G Hello Hello World World Hello-&gt;World Hello World "],
["1-2-.html", "1.2 Пример с вставкой диаграммы, описанной в отдельном файле", " 1.2 Пример с вставкой диаграммы, описанной в отдельном файле Вставка такого кода в файл документации: ```{r echo=FALSE, results=&#39;asis&#39;} to_diagram(&quot;erd&quot;, &quot;Entity Relation&quot;, src=&quot;../diagrams/examples/project.erd&quot;) ``` добавит такую диаграмму: Person Personnameheightweightbirth_location_id Location Locationidcitystatecountry Person–Location 10..N Entity Relation Содержимое файла diagrams/examples/project.erd с описанием диаграммы: [Person] *name height weight +birth_location_id [Location] *id city state country Person *--1 Location "],
["1-3-.html", "1.3 Больше примеров", " 1.3 Больше примеров Если Вам всё ещё интересно, больше примеров приведено в этой секции. "],
["2-as-template.html", "2 Использование проекта в качестве шаблона и создание собственной документации", " 2 Использование проекта в качестве шаблона и создание собственной документации Чтобы воспользоваться данным проектом как шаблоном для создания собственных документов, сделайте следующее: Импорт проекта и подготовка У Вас уже должны быть установлены docker и docker-compose Импорт ветки main из этого репозитория или создание форка: https://github.com/Godhart/devdoc-swissknife Исходные файлы для создания документации располагаются в папке docs_src. Создайте новуй папку внутри docs_src. Рекомендуемый шаблон для имени папки: doc-&lt;subject&gt; Скопируйте все файлы из docs_src/docs-template в только что созданную папку В скопированных файлах замените следующий текст актуальными значениями: &lt;Author Name&gt;, &lt;author&gt;, &lt;repo&gt;, &lt;Document Title&gt;, Document_Title, &lt;Document Description&gt; Не пропустите замену текста Document_Title и в файле .gitignore, который так же будет среди них. Если вам захочется избавиться от документации devdoc-swissknife, которая тоже будет в этом репозитории: Удалите папки с именем по следующему шаблону docs_src/devdoc-swissknife-* Очистите папку docs_src/diagrams. Поправьте docs_src/Makefile как Вам требуется (для начала - просто воспользуйтесь шаблоном, который описан в этом файле). Если вы до этого не создавали образ docker devdoc-swissknife - сделайте это сейчас. Просто выполните файл make_docker.sh из папки docker. Можно попробовать создать документацию - выполните файл make_docs.sh. Результаты сборки появятся в папке docs_out/doc-&lt;subject&gt; если вы следовали шаблону из Makefile. Обратите внимание, что папка docs_out и всё её содержимое игноирурются в git. ВНИМАНИЕ: зачастую в случае ошибок сборки документа папка с исходными файлами документов м.б. засорена временными файлами, их имя будет соответствовать значению поля book_filename из файла _bookdown.yml и их наличие может сломать последующие сборки. Обычно эти файлы удаляются при сборке и не составляют проблем, но иногда может потребоваться удалить их самостоятельно. К примиеру таким случаем м.б. изменение поля book_filename в файле _bookdown.yml после возникновения ошибки. Создавайте свою документацию Отредактируйте файл index.Rmd (содержит Вступление). Добавляйте собственные файлы, давая им именам по шаблону &lt;number&gt;-&lt;chapter-name&gt;.Rmd. Настоятельно рекомендуется ознакомиться с документацией на R Markdown и Kroki чтобы понимать правила, а так же можно опираться на примеры из проекта. Если у Вас уже имеется документация, описанная в формате markdown её можно добавить образом: скопируйте файлы markdown в своб папку с документацией (назовём её условно doc-folder) скопируйте изображения из документации в папку docs_src/diagrams или туда, где это покажется более логичным измените markdown files to .Rmd change names of markdown files so they would correspond to pattern &lt;number&gt;-&lt;chapter-name&gt;.Rmd change references to local images in markdown files Если у Вас уже имеются текстовые описания диаграмм для графики в вашей документации и такой визуализатор поддерживается, то Вы можете включить их в документацию следующим образом: скопируйте все необходимые файлы в папку docs_src/diagrams или туда, где это покажется более логичным в файлах Rmd замените вставку изображений на вставку диаграмм так, как это описано здесь TODO Скорее всего Вам захочется использовать собственный класс Latex для создания PDF, поэтому добавьте файл &lt;your_latex_class&gt;.cls в вашу папку и укажите его в файле index.Rmd (замените поле documentclass: book названием вашего класса - &lt;your_latex_class&gt;). В случае если Вы будете использовать собственный класс Latex или свои пакеты для R, Python и т.д. - скорее всего потребуется включить дополнительные пакеты в docker образ devdoc-swissknife. В таком случае измените файл docker/Dockerfile как Вам требуется и соберите образ снова с помощью make_docker.sh. "],
["3-examplesKroki.html", "3 Примеры визуализации диаграмм с помощью Kroki", " 3 Примеры визуализации диаграмм с помощью Kroki Примеры взяты с сайта Kroki, но я решил пропустить некоторые и оставить лишь те, которые на мой взгляд требуются чаще всего, а так же просты для текстового ввода. Для полного перечня диаграмм, которые можно отобразить, стоит посмотреть документацию на поддерживаемые визуализаторы. Данные для всех диаграмм в этой секции располагаются в файлах в папке docs_src/diagrams/examples данного репозитория. Каждая диаграмма включена в документ с помощью следующей конструкции: ```{r echo=FALSE, results=&#39;asis&#39;} to_diagram(&quot;from_src&quot;, &quot;&lt;Drawing name&gt;&quot;, src=&quot;../diagrams/&lt;src_file_path_within_diagrams_dir&gt;&quot;) ``` Такой шаблон применения описан в секции TODO Код для всей секции с примерами можно увидеть здесь "],
["3-1-c4-plantumlc4.html", "3.1 C4 Диаграмма контекста (PlantUML+C4)", " 3.1 C4 Диаграмма контекста (PlantUML+C4) Визуализатор: c4plantuml System Context diagram for Internet Banking SystemPersonal BankingCustomerA customer of the bank, withpersonal bank accounts.Internet Banking SystemAllows customers to viewinformation about their bankaccounts, and make payments.E-mail systemThe internal MicrosoftExchange e-mail system.Mainframe BankingSystemStores all of the core bankinginformation about customers,accounts, transactions, etc.UsesSends e-mails toSends e-mails[SMTP]UsesLegendpersonsystemexternal personexternal system Example - C4 Context Diagram "],
["3-2-c4-plantumlc4.html", "3.2 C4 Диаграмма контейнеров (PlantUML+C4)", " 3.2 C4 Диаграмма контейнеров (PlantUML+C4) Визуализатор: c4plantuml Container diagram for Internet Banking SystemInternet Banking[System]Web Application[Java, Spring MVC]Delivers the static content andthe Internet banking SPASingle-Page App[JavaScript, Angular]Provides all the Internetbanking functionality tocutomers via their web browserMobile App[C#, Xamarin]Provides a limited subset of theInternet banking functionality tocustomers via their mobiledeviceDatabase[SQL Database]Stores user registraioninformation, hased authcredentials, access logs, etc.API Application[Java, Docker Container]Provides Internet bankingfunctionality via APICustomerA customer of the bank, withpersonal bank accountsE-Mail SystemThe internal MicrosoftExchange systemMainframe BankingSystemStores all of the core bankinginformation about customers,accounts, transactions, etc.Uses[HTTPS]Uses[HTTPS]UsesDeliversUses[async, JSON/HTTPS]Uses[async, JSON/HTTPS]Reads from and writes to[sync, JDBC]Sends e-mails toSends e-mails using[sync, SMTP]Uses[sync/async, XML/HTTPS]Legendpersonsystemcontainerexternal personexternal systemexternal container Example - C4 Container Diagram "],
["3-3-c4-plantumlc4.html", "3.3 C4 Диаграмма компонентов (PlantUML+C4)", " 3.3 C4 Диаграмма компонентов (PlantUML+C4) Визуализатор: c4plantuml Component diagram for Internet Banking System - API ApplicationAPI Application[Container]Sign In Controller[MVC Rest Controlle]Allows users to sign in to theinternet banking systemAccounts SummaryController[MVC Rest Controlle]Provides customers with asummory of their bank accountsSecurity Component[Spring Bean]Provides functionality related tosinging in, changingpasswords, etc.Mainframe BankingSystem Facade[Spring Bean]A facade onto the mainframebanking system.Single Page Application[javascript and angular]Provides all the internetbanking functionality tocustomers via their webbrowser.Mobile App[Xamarin]Provides a limited subset ot theinternet banking functionality tocustomers via their mobilemobile device.Database[Relational Database Schema]Stores user registrationinformation, hashedauthentication credentials,access logs, etc.Mainframe BankingSystemStores all of the core bankinginformation about customers,accounts, transactions, etc.UsesUsesRead &amp; write to[JDBC]Uses[XML/HTTPS]Uses[JSON/HTTPS]Uses[JSON/HTTPS]Uses[JSON/HTTPS]Uses[JSON/HTTPS]Legendpersonsystemcontainercomponentexternal personexternal systemexternal containerexternal component Example - C4 Component Diagram "],
["3-4-section-3-4.html", "3.4 Блоксхема", " 3.4 Блоксхема Визуализатор: blockdiag blockdiag blockdiag {blockdiag -&gt; generates -&gt; “block-diagrams”;blockdiag -&gt; is -&gt; “very easy!”;blockdiag [color = “greenyellow”];“block-diagrams” [color = “pink”];“very easy!” [color = “orange”];} blockdiag generates is block-diagrams very easy! Example - Block Diagram "],
["3-5-.html", "3.5 Цифровая временная диаграмма", " 3.5 Цифровая временная диаграмма Визуализатор: wavedrom text{font-size:11pt;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;fill-opacity:1;font-family:Helvetica}.h1{font-size:33pt;font-weight:bold}.h2{font-size:27pt;font-weight:bold}.h3{font-size:20pt;font-weight:bold}.h4{font-size:14pt;font-weight:bold}.h5{font-size:11pt;font-weight:bold}.h6{font-size:8pt;font-weight:bold}.muted{fill:#aaa}.warning{fill:#f6b900}.error{fill:#f60000}.info{fill:#0041c4}.success{fill:#00ab00}.s1{fill:none;stroke:#000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none}.s2{fill:none;stroke:#000;stroke-width:0.5;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none}.s3{color:#000;fill:none;stroke:#000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:1, 3;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible}.s4{color:#000;fill:none;stroke:#000;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible}.s5{fill:#fff;stroke:none}.s6{fill:#000;fill-opacity:1;stroke:none}.s7{color:#000;fill:#fff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s8{color:#000;fill:#ffffb4;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s9{color:#000;fill:#ffe0b9;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s10{color:#000;fill:#b9e0ff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s11{color:#000;fill:#ccfdfe;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s12{color:#000;fill:#cdfdc5;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s13{color:#000;fill:#f0c1fb;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s14{color:#000;fill:#f5c2c0;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1px;marker:none;visibility:visible;display:inline;overflow:visible}.s15{fill:#0041c4;fill-opacity:1;stroke:none}.s16{fill:none;stroke:#0041c4;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none} clkDataheadbodytaildataRequestAcknowledge Example - Digital Timing Diagram "],
["3-6-bytefield.html", "3.6 Bytefield", " 3.6 Bytefield Визуализатор: bytefield 0123456789abcdefstartTxIDtypeargstags11872349ae11TxID1047020f091400100000000c (12)060606030606060603000000201100002104110000000011length11430length1Cue and loop point bytes40i+00110000003611numhot11numcuei+00i+1011length214length2Unknown bytesi+20i+00 Example - Bytefield "],
["3-7-packet-diagram.html", "3.7 Packet Diagram", " 3.7 Packet Diagram Визуализатор: packetdiag Example - Packet Diagram "],
["3-8-1-plantuml.html", "3.8 Диаграмма последовательности №1 (PlantUML)", " 3.8 Диаграмма последовательности №1 (PlantUML) Визуализатор: plantuml AliceAliceBobBobLogLogAuthentication Requestalt[successful case]Authentication Accepted[some kind of failure]Authentication FailureMy own labelLog attack startloop[1000 times]DNS AttackLog attack end[Another type of failure]Please repeat Example - Sequence Diagram - PlantUML "],
["3-9-2-seqdiag.html", "3.9 Диаграмма последовательности №2 (SeqDiag)", " 3.9 Диаграмма последовательности №2 (SeqDiag) Визуализатор: seqdiag blockdiag seqdiag { browser -&gt; webserver [label = “GET /index.html”]; browser &lt;– webserver; browser -&gt; webserver [label = “POST /blog/comment”]; webserver -&gt; database [label = “INSERT comment”]; webserver &lt;– database; browser &lt;– webserver;} browser webserver database GET /index.html POST /blog/comment INSERT comment Example - Sequence Diagram - SeqDiag "],
["3-10-.html", "3.10 Граф фиксации изменений", " 3.10 Граф фиксации изменений Визуализатор: pikchr NOTE: pikchr создаёт SVG, которые нормально отображают только Web-браузеры, поэтому с ними будут проблемы в PDF/PNG C0C1C2C4C6C3C5C3’C5’trunkfeature branchC0C1C2C4C6C3C5C7trunkfeature branch Example - Commit Graph "],
["3-11-.html", "3.11 Диаграмма прецедентов", " 3.11 Диаграмма прецедентов Визуализатор: plantuml checkoutcheckoutpaymenthelpcustomerclerkincludeextends Example Block Diagram "],
["3-12-.html", "3.12 Ментальная карта", " 3.12 Ментальная карта Визуализатор: plantuml OSUbuntuLinux MintKubuntuLubuntuKDE NeonLMDESolydXKSteamOSRaspbianWindows 95Windows 98Windows NTWindows 8Windows 10 Example - Mind Map "],
["3-13-plantuml-.html", "3.13 PlantUML (ещё примеры)", " 3.13 PlantUML (ещё примеры) В PlantUML возможно создание большого кол-ва диаграмм разного рода, таких как временные диаграммы, диаграмма Ганта и т.д.. Они все могут быть использованы аналогично предыдущим примерам. Обратитесь к документации PlantUML https://plantuml.com/ для подробностей их описания. "],
["3-14-.html", "3.14 Диаграмма Ганта", " 3.14 Диаграмма Ганта Визуализатор: mermaid NOTE: mermaid создаёт SVG, которые нормально отображают только Web-браузеры, поэтому с ними будут проблемы в PDF/PNG #mermaid-1632975713152{font-family:&quot;trebuchet ms&quot;,verdana,arial,sans-serif;font-size:16px;fill:#333;}#mermaid-1632975713152 .error-icon{fill:#552222;}#mermaid-1632975713152 .error-text{fill:#552222;stroke:#552222;}#mermaid-1632975713152 .edge-thickness-normal{stroke-width:2px;}#mermaid-1632975713152 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1632975713152 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1632975713152 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1632975713152 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1632975713152 .marker{fill:#333333;stroke:#333333;}#mermaid-1632975713152 .marker.cross{stroke:#333333;}#mermaid-1632975713152 svg{font-family:&quot;trebuchet ms&quot;,verdana,arial,sans-serif;font-size:16px;}#mermaid-1632975713152 .mermaid-main-font{font-family:&quot;trebuchet ms&quot;,verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-1632975713152 .section{stroke:none;opacity:0.2;}#mermaid-1632975713152 .section0{fill:rgba(102,102,255,0.49);}#mermaid-1632975713152 .section2{fill:#fff400;}#mermaid-1632975713152 .section1,#mermaid-1632975713152 .section3{fill:white;opacity:0.2;}#mermaid-1632975713152 .sectionTitle0{fill:#333;}#mermaid-1632975713152 .sectionTitle1{fill:#333;}#mermaid-1632975713152 .sectionTitle2{fill:#333;}#mermaid-1632975713152 .sectionTitle3{fill:#333;}#mermaid-1632975713152 .sectionTitle{text-anchor:start;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-1632975713152 .grid .tick{stroke:lightgrey;opacity:0.8;shape-rendering:crispEdges;}#mermaid-1632975713152 .grid .tick text{font-family:&quot;trebuchet ms&quot;,verdana,arial,sans-serif;fill:#333;}#mermaid-1632975713152 .grid path{stroke-width:0;}#mermaid-1632975713152 .today{fill:none;stroke:red;stroke-width:2px;}#mermaid-1632975713152 .task{stroke-width:2;}#mermaid-1632975713152 .taskText{text-anchor:middle;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-1632975713152 .taskTextOutsideRight{fill:black;text-anchor:start;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-1632975713152 .taskTextOutsideLeft{fill:black;text-anchor:end;}#mermaid-1632975713152 .task.clickable{cursor:pointer;}#mermaid-1632975713152 .taskText.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold;}#mermaid-1632975713152 .taskTextOutsideLeft.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold;}#mermaid-1632975713152 .taskTextOutsideRight.clickable{cursor:pointer;fill:#003163 !important;font-weight:bold;}#mermaid-1632975713152 .taskText0,#mermaid-1632975713152 .taskText1,#mermaid-1632975713152 .taskText2,#mermaid-1632975713152 .taskText3{fill:white;}#mermaid-1632975713152 .task0,#mermaid-1632975713152 .task1,#mermaid-1632975713152 .task2,#mermaid-1632975713152 .task3{fill:#8a90dd;stroke:#534fbc;}#mermaid-1632975713152 .taskTextOutside0,#mermaid-1632975713152 .taskTextOutside2{fill:black;}#mermaid-1632975713152 .taskTextOutside1,#mermaid-1632975713152 .taskTextOutside3{fill:black;}#mermaid-1632975713152 .active0,#mermaid-1632975713152 .active1,#mermaid-1632975713152 .active2,#mermaid-1632975713152 .active3{fill:#bfc7ff;stroke:#534fbc;}#mermaid-1632975713152 .activeText0,#mermaid-1632975713152 .activeText1,#mermaid-1632975713152 .activeText2,#mermaid-1632975713152 .activeText3{fill:black !important;}#mermaid-1632975713152 .done0,#mermaid-1632975713152 .done1,#mermaid-1632975713152 .done2,#mermaid-1632975713152 .done3{stroke:grey;fill:lightgrey;stroke-width:2;}#mermaid-1632975713152 .doneText0,#mermaid-1632975713152 .doneText1,#mermaid-1632975713152 .doneText2,#mermaid-1632975713152 .doneText3{fill:black !important;}#mermaid-1632975713152 .crit0,#mermaid-1632975713152 .crit1,#mermaid-1632975713152 .crit2,#mermaid-1632975713152 .crit3{stroke:#ff8888;fill:red;stroke-width:2;}#mermaid-1632975713152 .activeCrit0,#mermaid-1632975713152 .activeCrit1,#mermaid-1632975713152 .activeCrit2,#mermaid-1632975713152 .activeCrit3{stroke:#ff8888;fill:#bfc7ff;stroke-width:2;}#mermaid-1632975713152 .doneCrit0,#mermaid-1632975713152 .doneCrit1,#mermaid-1632975713152 .doneCrit2,#mermaid-1632975713152 .doneCrit3{stroke:#ff8888;fill:lightgrey;stroke-width:2;cursor:pointer;shape-rendering:crispEdges;}#mermaid-1632975713152 .milestone{-webkit-transform:rotate(45deg) scale(0.8,0.8);-ms-transform:rotate(45deg) scale(0.8,0.8);transform:rotate(45deg) scale(0.8,0.8);}#mermaid-1632975713152 .milestoneText{font-style:italic;}#mermaid-1632975713152 .doneCritText0,#mermaid-1632975713152 .doneCritText1,#mermaid-1632975713152 .doneCritText2,#mermaid-1632975713152 .doneCritText3{fill:black !important;}#mermaid-1632975713152 .activeCritText0,#mermaid-1632975713152 .activeCritText1,#mermaid-1632975713152 .activeCritText2,#mermaid-1632975713152 .activeCritText3{fill:black !important;}#mermaid-1632975713152 .titleText{text-anchor:middle;font-size:18px;fill:#333;font-family:'trebuchet ms',verdana,arial,sans-serif;font-family:var(--mermaid-font-family);}#mermaid-1632975713152:root{--mermaid-font-family:&quot;trebuchet ms&quot;,verdana,arial,sans-serif;} 2014-01-052014-01-122014-01-192014-01-262014-02-022014-02-092014-02-16A task Task in sec another task Another task SectionAnotherA Gantt Diagram Example - Gantt "]
]
