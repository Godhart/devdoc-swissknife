# Использование проекта в качестве шаблона и создание собственной документации {#template}

Чтобы воспользоваться данным проектом как шаблоном для создания собственных документов, сделайте следующее:

1. Импорт проекта и подготовка

> У Вас уже должны быть установлены `docker` и `docker-compose`

  * Импорт ветки main из этого репозитория или создание форка:
  [https://github.com/Godhart/devdoc-swissknife](https://github.com/Godhart/devdoc-swissknife)\
  Исходные файлы для создания документации располагаются в папке `docs_src`.

  * Создайте новуй папку внутри `docs_src`. Рекомендуемый шаблон для имени папки: `doc-<subject>`

  * Скопируйте все файлы из `docs_src/docs-template` в только что созданную папку

  * В скопированных файлах замените следующий текст актуальными значениями:
  `<Author Name>`, `<author>`, `<repo>`, `<Document Title>`, `Document_Title`, `<Document Description>`

  Не пропустите замену текста `Document_Title` и в файле `.gitignore`, который так же будет среди них.

  * Если вам захочется избавиться от документации devdoc-swissknife, которая тоже будет в этом репозитории:

    * Удалите папки с именем по следующему шаблону `docs_src/devdoc-swissknife-*`
    * Очистите папку `docs_src/diagrams`.

  * Поправьте `docs_src/Makefile` как Вам требуется (для начала - просто воспользуйтесь шаблоном, который описан в этом файле).

  * Если вы до этого не создавали образ docker `devdoc-swissknife` - сделайте это сейчас.
  Просто выполните файл `make_docker.sh` из папки `docker`.

  * Можно попробовать создать документацию - выполните файл `make_docs.sh`.
  Результаты сборки появятся в папке `docs_out/doc-<subject>` если вы следовали шаблону из Makefile.\
  *Обратите внимание, что папка `docs_out` и всё её содержимое игноирурются в git.*

> ВНИМАНИЕ: зачастую в случае ошибок сборки документа папка с исходными файлами документов м.б. засорена временными файлами,
> их имя будет соответствовать значению поля `book_filename` из файла `_bookdown.yml` и их наличие может сломать последующие сборки.\
> Обычно эти файлы удаляются при сборке и не составляют проблем, но иногда может потребоваться удалить их самостоятельно.\
> К примиеру таким случаем м.б. изменение поля `book_filename` в файле `_bookdown.yml` после возникновения ошибки.

2. Создавайте свою документацию

  * Отредактируйте файл `index.Rmd` (содержит *Вступление*).

  * Добавляйте собственные файлы, давая им именам по шаблону `<number>-<chapter-name>.Rmd`.\
  Настоятельно рекомендуется ознакомиться с документацией на R Markdown и Kroki чтобы понимать правила,
  а так же можно опираться на примеры из проекта.

  * Если у Вас уже имеется документация, описанная в формате markdown её можно добавить образом:

    * скопируйте файлы markdown в своб папку с документацией (назовём её условно `doc-folder`)
    * скопируйте изображения из документации в папку `docs_src/diagrams` или туда, где это покажется более логичным
    * измените markdown files to `.Rmd`
    * change names of markdown files so they would correspond to pattern `<number>-<chapter-name>.Rmd`
    * change references to local images in markdown files

  * Если у Вас уже имеются текстовые описания диаграмм для графики в вашей документации и такой визуализатор поддерживается,
    то Вы можете включить их в документацию следующим образом:

    * скопируйте все необходимые файлы в папку `docs_src/diagrams` или туда, где это покажется более логичным
    * в файлах `.Rmd` замените вставку изображений на вставку диаграмм так, как это описано здесь [TODO](TODO)

  * Скорее всего Вам захочется использовать собственный класс Latex для создания PDF, поэтому добавьте файл `<your_latex_class>.cls`
  в вашу папку и укажите его в файле `index.Rmd` (замените поле `documentclass: book` названием вашего класса - `<your_latex_class>`).

> В случае если Вы будете использовать собственный класс Latex или свои пакеты для R, Python и т.д. - скорее всего потребуется
> включить дополнительные пакеты в docker образ `devdoc-swissknife`.
> В таком случае измените файл `docker/Dockerfile` как Вам требуется и соберите образ снова с помощью `make_docker.sh`.
